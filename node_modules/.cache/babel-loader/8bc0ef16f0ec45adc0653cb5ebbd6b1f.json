{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = exports.contains = exports.root = exports.parseHTML = exports.text = exports.xml = exports.html = void 0;\nvar domutils_1 = require(\"domutils\");\nvar options_js_1 = __importStar(require(\"./options.js\"));\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(that, dom, options) {\n  if (!that) return '';\n  return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(dom, options) {\n  return !options && typeof dom === 'object' && dom != null && !('length' in dom) && !('type' in dom);\n}\nfunction html(dom, options) {\n  /*\n   * Be flexible about parameters, sometimes we call html(),\n   * with options as only parameter\n   * check dom argument for dom element specific properties\n   * assume there is no 'length' or 'type' properties in the options object\n   */\n  var toRender = isOptions(dom) ? (options = dom, undefined) : dom;\n  /*\n   * Sometimes `$.html()` is used without preloading html,\n   * so fallback non-existing options to the default ones.\n   */\n  var opts = __assign(__assign(__assign({}, options_js_1.default), this === null || this === void 0 ? void 0 : this._options), (0, options_js_1.flatten)(options !== null && options !== void 0 ? options : {}));\n  return render(this, toRender, opts);\n}\nexports.html = html;\n/**\n * Render the document as XML.\n *\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nfunction xml(dom) {\n  var options = __assign(__assign({}, this._options), {\n    xmlMode: true\n  });\n  return render(this, dom, options);\n}\nexports.xml = xml;\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `script` and `stype` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nfunction text(elements) {\n  var elems = elements ? elements : this ? this.root() : [];\n  var ret = '';\n  for (var i = 0; i < elems.length; i++) {\n    ret += (0, domutils_1.textContent)(elems[i]);\n  }\n  return ret;\n}\nexports.text = text;\nfunction parseHTML(data, context, keepScripts) {\n  if (keepScripts === void 0) {\n    keepScripts = typeof context === 'boolean' ? context : false;\n  }\n  if (!data || typeof data !== 'string') {\n    return null;\n  }\n  if (typeof context === 'boolean') {\n    keepScripts = context;\n  }\n  var parsed = this.load(data, options_js_1.default, false);\n  if (!keepScripts) {\n    parsed('script').remove();\n  }\n  /*\n   * The `children` array is used by Cheerio internally to group elements that\n   * share the same parents. When nodes created through `parseHTML` are\n   * inserted into previously-existing DOM structures, they will be removed\n   * from the `children` array. The results of `parseHTML` should remain\n   * constant across these operations, so a shallow copy should be returned.\n   */\n  return parsed.root()[0].children.slice();\n}\nexports.parseHTML = parseHTML;\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nfunction root() {\n  return this(this._root);\n}\nexports.root = root;\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nfunction contains(container, contained) {\n  // According to the jQuery API, an element does not \"contain\" itself\n  if (contained === container) {\n    return false;\n  }\n  /*\n   * Step up the descendants, stopping when the root element is reached\n   * (signaled by `.parent` returning a reference to the same object)\n   */\n  var next = contained;\n  while (next && next !== next.parent) {\n    next = next.parent;\n    if (next === container) {\n      return true;\n    }\n  }\n  return false;\n}\nexports.contains = contains;\n/**\n * $.merge().\n *\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nfunction merge(arr1, arr2) {\n  if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n    return;\n  }\n  var newLength = arr1.length;\n  var len = +arr2.length;\n  for (var i = 0; i < len; i++) {\n    arr1[newLength++] = arr2[i];\n  }\n  arr1.length = newLength;\n  return arr1;\n}\nexports.merge = merge;\n/**\n * Checks if an object is array-like.\n *\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) {\n    return true;\n  }\n  if (typeof item !== 'object' || !Object.prototype.hasOwnProperty.call(item, 'length') || typeof item.length !== 'number' || item.length < 0) {\n    return false;\n  }\n  for (var i = 0; i < item.length; i++) {\n    if (!(i in item)) {\n      return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"sources":["static.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAA,UAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AACA,IAAA,YAAA,GAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;AAOA;;;;;;;AAOG;AACH,SAAS,MAAM,CACb,IAAgB,EAChB,GAA4C,EAC5C,OAAwB,EAAA;EAExB,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE;EAEpB,OAAO,IAAI,CAAC,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAH,GAAG,GAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAA,CAAE;AAC9E;AAEA;;;;;AAKG;AACH,SAAS,SAAS,CAChB,GAAyD,EACzD,OAAwB,EAAA;EAExB,OACE,CAAC,OAAO,IACR,OAAO,GAAG,KAAK,QAAQ,IACvB,GAAG,IAAI,IAAI,IACX,EAAE,QAAQ,IAAI,GAAG,CAAC,IAClB,EAAE,MAAM,IAAI,GAAG,CAAC;AAEpB;AAqBA,SAAgB,IAAI,CAElB,GAAkD,EAClD,OAAwB,EAAA;EAExB;;;;;AAKG;EACH,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,IAAK,OAAO,GAAG,GAAG,EAAG,SAAS,IAAI,GAAG;EAEpE;;;AAGG;EACH,IAAM,IAAI,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACL,YAAA,CAAA,OAAc,CAAA,EACd,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,QAAQ,CAAA,EACd,CAAA,CAAA,EAAA,YAAA,CAAA,OAAc,EAAC,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAP,OAAO,GAAI,CAAA,CAAE,CAAC,CACjC;EAED,OAAO,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;AACrC;AAxBA,OAAA,CAAA,IAAA,GAAA,IAAA;AA0BA;;;;;AAKG;AACH,SAAgB,GAAG,CAEjB,GAAiC,EAAA;EAEjC,IAAM,OAAO,GAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAQ,IAAI,CAAC,QAAQ,CAAA,EAAA;IAAE,OAAO,EAAE;EAAI,CAAA,CAAE;EAEnD,OAAO,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,CAAC;AACnC;AAPA,OAAA,CAAA,GAAA,GAAA,GAAA;AASA;;;;;;;;;AASG;AACH,SAAgB,IAAI,CAElB,QAA6B,EAAA;EAE7B,IAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA,CAAE,GAAG,EAAE;EAE3D,IAAI,GAAG,GAAG,EAAE;EAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrC,GAAG,IAAI,CAAA,CAAA,EAAA,UAAA,CAAA,WAAW,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B;EAED,OAAO,GAAG;AACZ;AAbA,OAAA,CAAA,IAAA,GAAA,IAAA;AAkCA,SAAgB,SAAS,CAEvB,IAAoB,EACpB,OAA2B,EAC3B,WAA4D,EAAA;EAA5D,IAAA,WAAA,KAAA,KAAA,CAAA,EAAA;IAAA,WAAA,GAAc,OAAO,OAAO,KAAK,SAAS,GAAG,OAAO,GAAG,KAAK;EAAA;EAE5D,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IACrC,OAAO,IAAI;EACZ;EAED,IAAI,OAAO,OAAO,KAAK,SAAS,EAAE;IAChC,WAAW,GAAG,OAAO;EACtB;EAED,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,YAAA,CAAA,OAAc,EAAE,KAAK,CAAC;EACrD,IAAI,CAAC,WAAW,EAAE;IAChB,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAA,CAAE;EAC1B;EAED;;;;;;AAMG;EACH,OAAO,MAAM,CAAC,IAAI,CAAA,CAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAA,CAAE;AAC1C;AA3BA,OAAA,CAAA,SAAA,GAAA,SAAA;AA6BA;;;;;;;;;;;;;AAaG;AACH,SAAgB,IAAI,CAAA,EAAA;EAClB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACzB;AAFA,OAAA,CAAA,IAAA,GAAA,IAAA;AAIA;;;;;;;;;AASG;AACH,SAAgB,QAAQ,CAAC,SAAkB,EAAE,SAAkB,EAAA;EAC7D;EACA,IAAI,SAAS,KAAK,SAAS,EAAE;IAC3B,OAAO,KAAK;EACb;EAED;;;AAGG;EACH,IAAI,IAAI,GAAmB,SAAS;EACpC,OAAO,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,EAAE;IACnC,IAAI,GAAG,IAAI,CAAC,MAAM;IAClB,IAAI,IAAI,KAAK,SAAS,EAAE;MACtB,OAAO,IAAI;IACZ;EACF;EAED,OAAO,KAAK;AACd;AAnBA,OAAA,CAAA,QAAA,GAAA,QAAA;AA0BA;;;;;;;;AAQG;AACH,SAAgB,KAAK,CACnB,IAA0B,EAC1B,IAAkB,EAAA;EAElB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;IAC5C;EACD;EACD,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM;EAC3B,IAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM;EAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC5B,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;EAC5B;EACD,IAAI,CAAC,MAAM,GAAG,SAAS;EACvB,OAAO,IAAI;AACb;AAfA,OAAA,CAAA,KAAA,GAAA,KAAA;AAiBA;;;;;AAKG;AACH,SAAS,WAAW,CAAC,IAAS,EAAA;EAC5B,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;IACvB,OAAO,IAAI;EACZ;EAED,IACE,OAAO,IAAI,KAAK,QAAQ,IACxB,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,IACrD,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,IAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,EACf;IACA,OAAO,KAAK;EACb;EAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;MAChB,OAAO,KAAK;IACb;EACF;EACD,OAAO,IAAI;AACb","sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.merge = exports.contains = exports.root = exports.parseHTML = exports.text = exports.xml = exports.html = void 0;\nvar domutils_1 = require(\"domutils\");\nvar options_js_1 = __importStar(require(\"./options.js\"));\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(that, dom, options) {\n    if (!that)\n        return '';\n    return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(dom, options) {\n    return (!options &&\n        typeof dom === 'object' &&\n        dom != null &&\n        !('length' in dom) &&\n        !('type' in dom));\n}\nfunction html(dom, options) {\n    /*\n     * Be flexible about parameters, sometimes we call html(),\n     * with options as only parameter\n     * check dom argument for dom element specific properties\n     * assume there is no 'length' or 'type' properties in the options object\n     */\n    var toRender = isOptions(dom) ? ((options = dom), undefined) : dom;\n    /*\n     * Sometimes `$.html()` is used without preloading html,\n     * so fallback non-existing options to the default ones.\n     */\n    var opts = __assign(__assign(__assign({}, options_js_1.default), this === null || this === void 0 ? void 0 : this._options), (0, options_js_1.flatten)(options !== null && options !== void 0 ? options : {}));\n    return render(this, toRender, opts);\n}\nexports.html = html;\n/**\n * Render the document as XML.\n *\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nfunction xml(dom) {\n    var options = __assign(__assign({}, this._options), { xmlMode: true });\n    return render(this, dom, options);\n}\nexports.xml = xml;\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `script` and `stype` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nfunction text(elements) {\n    var elems = elements ? elements : this ? this.root() : [];\n    var ret = '';\n    for (var i = 0; i < elems.length; i++) {\n        ret += (0, domutils_1.textContent)(elems[i]);\n    }\n    return ret;\n}\nexports.text = text;\nfunction parseHTML(data, context, keepScripts) {\n    if (keepScripts === void 0) { keepScripts = typeof context === 'boolean' ? context : false; }\n    if (!data || typeof data !== 'string') {\n        return null;\n    }\n    if (typeof context === 'boolean') {\n        keepScripts = context;\n    }\n    var parsed = this.load(data, options_js_1.default, false);\n    if (!keepScripts) {\n        parsed('script').remove();\n    }\n    /*\n     * The `children` array is used by Cheerio internally to group elements that\n     * share the same parents. When nodes created through `parseHTML` are\n     * inserted into previously-existing DOM structures, they will be removed\n     * from the `children` array. The results of `parseHTML` should remain\n     * constant across these operations, so a shallow copy should be returned.\n     */\n    return parsed.root()[0].children.slice();\n}\nexports.parseHTML = parseHTML;\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nfunction root() {\n    return this(this._root);\n}\nexports.root = root;\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nfunction contains(container, contained) {\n    // According to the jQuery API, an element does not \"contain\" itself\n    if (contained === container) {\n        return false;\n    }\n    /*\n     * Step up the descendants, stopping when the root element is reached\n     * (signaled by `.parent` returning a reference to the same object)\n     */\n    var next = contained;\n    while (next && next !== next.parent) {\n        next = next.parent;\n        if (next === container) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.contains = contains;\n/**\n * $.merge().\n *\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nfunction merge(arr1, arr2) {\n    if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n        return;\n    }\n    var newLength = arr1.length;\n    var len = +arr2.length;\n    for (var i = 0; i < len; i++) {\n        arr1[newLength++] = arr2[i];\n    }\n    arr1.length = newLength;\n    return arr1;\n}\nexports.merge = merge;\n/**\n * Checks if an object is array-like.\n *\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item) {\n    if (Array.isArray(item)) {\n        return true;\n    }\n    if (typeof item !== 'object' ||\n        !Object.prototype.hasOwnProperty.call(item, 'length') ||\n        typeof item.length !== 'number' ||\n        item.length < 0) {\n        return false;\n    }\n    for (var i = 0; i < item.length; i++) {\n        if (!(i in item)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=static.js.map"]},"metadata":{},"sourceType":"script"}